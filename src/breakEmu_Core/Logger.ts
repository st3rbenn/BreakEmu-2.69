import * as PinoLogger from "pino"
import { ansiColorCodes } from "./Colors"

class Logger {
	private _logger: PinoLogger.Logger

	constructor(msgPrefix: string = "breakEmu",) {
		this._logger = PinoLogger.default({
      timestamp: false,
      base: undefined,
			msgPrefix: `[${msgPrefix}]: `,
			transport: {
				target: "pino-pretty",
			},

		})
	}

	public newLine(): void {
		this._logger.info("")
	}

	private Colorize(msg: string, color: string): string {
		return `${color}${msg}\x1b[0m`
	}

	public error(msg: string): void {
		this._logger.error(msg)
	}

	public warn(msg: string): void {
		this._logger.warn(msg)
	}

	public write(message: string, color?: string): void {
		if (color) {
			this._logger.info(this.Colorize(message, color))
		} else {
			this._logger.info(message)
		}
	}

  private supressLoggerLevel(msg: string): string {
    return `\r\x1b[K${msg}`;
  }

  public async writeAsync(message: string, color?: string): Promise<void> {
    return new Promise(resolve => {
        this.write(message, color); // Assuming this.write is your existing synchronous method
        setTimeout(resolve, 10); // Adjust the delay as needed
    });
  }

	public async logo(): Promise<void> {
    this.newLine()
    await this.writeAsync(" ‚ñÑ‚ñÑ‚ñÑ‚ñÑ    ‚ñà‚ñà‚ñÄ‚ñà‚ñà‚ñà  ‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñÑ‚ñÑ‚ñÑ       ‚ñà‚ñà ‚ñÑ‚ñà‚ñÄ", ansiColorCodes.bright)
    await this.writeAsync("‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÑ ‚ñì‚ñà‚ñà ‚ñí ‚ñà‚ñà‚ñí‚ñì‚ñà   ‚ñÄ‚ñí‚ñà‚ñà‚ñà‚ñà‚ñÑ     ‚ñà‚ñà‚ñÑ‚ñà‚ñí ", ansiColorCodes.bright)
    await this.writeAsync("‚ñí‚ñà‚ñà‚ñí ‚ñÑ‚ñà‚ñà‚ñì‚ñà‚ñà ‚ñë‚ñÑ‚ñà ‚ñí‚ñí‚ñà‚ñà‚ñà  ‚ñí‚ñà‚ñà  ‚ñÄ‚ñà‚ñÑ  ‚ñì‚ñà‚ñà‚ñà‚ñÑ‚ñë ", ansiColorCodes.bright)
    await this.writeAsync("‚ñí‚ñà‚ñà‚ñë‚ñà‚ñÄ  ‚ñí‚ñà‚ñà‚ñÄ‚ñÄ‚ñà‚ñÑ  ‚ñí‚ñì‚ñà  ‚ñÑ‚ñë‚ñà‚ñà‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñà‚ñà ‚ñì‚ñà‚ñà ‚ñà‚ñÑ ", ansiColorCodes.bright)
    await this.writeAsync("‚ñë‚ñì‚ñà  ‚ñÄ‚ñà‚ñì‚ñë‚ñà‚ñà‚ñì ‚ñí‚ñà‚ñà‚ñí‚ñë‚ñí‚ñà‚ñà‚ñà‚ñà‚ñí‚ñì‚ñà   ‚ñì‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà‚ñí ‚ñà‚ñÑ", ansiColorCodes.bright)
    await this.writeAsync("‚ñë‚ñí‚ñì‚ñà‚ñà‚ñà‚ñÄ‚ñí‚ñë ‚ñí‚ñì ‚ñë‚ñí‚ñì‚ñë‚ñë‚ñë ‚ñí‚ñë ‚ñë‚ñí‚ñí   ‚ñì‚ñí‚ñà‚ñë‚ñí ‚ñí‚ñí ‚ñì‚ñí", ansiColorCodes.bright)
    await this.writeAsync("‚ñí‚ñë‚ñí   ‚ñë   ‚ñë‚ñí ‚ñë ‚ñí‚ñë ‚ñë ‚ñë  ‚ñë ‚ñí   ‚ñí‚ñí ‚ñë‚ñë ‚ñë‚ñí ‚ñí‚ñë", ansiColorCodes.bright)
    await this.writeAsync(" ‚ñë    ‚ñë   ‚ñë‚ñë   ‚ñë    ‚ñë    ‚ñë   ‚ñí   ‚ñë ‚ñë‚ñë ‚ñë ", ansiColorCodes.bright)
    await this.writeAsync(" ‚ñë         ‚ñë        ‚ñë  ‚ñë     ‚ñë  ‚ñë‚ñë  ‚ñë   ", ansiColorCodes.bright)
    await this.writeAsync("      ‚ñë                                 ", ansiColorCodes.bright)
  }

	public async onStartup(): Promise<void> {
		await this.writeAsync("Starting breakEmu...", ansiColorCodes.green)

		await this.logo()
    this.newLine()

    this.write("Written by Sterben with ü•êüç∑", ansiColorCodes.blue)
    this.newLine();
	}
}

export default Logger
