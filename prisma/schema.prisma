// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id             Int         @id @default(autoincrement())
  username       String      @unique
  password       String
  pseudo         String?     @unique
  email          String
  is_verified    Boolean     @default(false)
  tag            String?
  firstname      String
  lastname       String
  birthdate      DateTime
  secretQuestion String?
  login_at       DateTime?
  logout_at      DateTime?
  created_at     DateTime    @default(now())
  updated_at     DateTime?   @updatedAt
  deleted_at     DateTime?
  ip             String
  is_banned      Boolean     @default(false)
  role           Int         @default(1)
  tagNumber      Int?        @unique
  characters     character[]
}

model character {
  id         Int       @id @default(autoincrement())
  breed_id   Int
  sex        Boolean
  cosmeticId Int
  name       String
  colors     String
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?
  user       user      @relation(fields: [userId], references: [id])
  userId     Int
  guild      guild?    @relation(fields: [guildId], references: [id])
  guildId    Int?
}

model guild {
  id         Int         @id @default(autoincrement())
  name       String
  level      Int
  created_at DateTime    @default(now())
  updated_at DateTime    @updatedAt
  deleted_at DateTime?
  characters character[]
}

model world {
  id                  Int       @id @default(autoincrement())
  name                String
  port                Int
  address             String
  requireSubscription Boolean   @default(false)
  completion          Int
  serverSelectable    Boolean   @default(false)
  charCapacity        Int
  charsCount          Int
  requiredRole        Int
  status              Int
  created_at          DateTime  @default(now())
  updated_at          DateTime  @updatedAt
  deleted_at          DateTime?
}

model breed {
  id                Int       @id
  name              String
  maleLook          String
  femaleLook        String
  maleColors        String
  femaleColors      String
  spForIntelligence String
  spForAgility      String
  spForStrength     String
  spForVitality     String
  spforWisdom       String
  spForChance       String
  startLifePoints   Int
  created_at        DateTime  @default(now())
  updated_at        DateTime  @updatedAt
  deleted_at        DateTime?
}

model dungeon {
  id                 Int    @id
  name               String
  optimalPlayerLevel Int
  mapId              String
  entranceMapId      BigInt
  exitMapId          BigInt
}
